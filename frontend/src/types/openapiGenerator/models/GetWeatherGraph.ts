/* tslint:disable */
/* eslint-disable */
/**
 * Nyeoreumnagi Swagger
 * 녀름나기 REST API 문서
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ValuePerTime } from './ValuePerTime';
import {
    ValuePerTimeFromJSON,
    ValuePerTimeFromJSONTyped,
    ValuePerTimeToJSON,
    ValuePerTimeToJSONTyped,
} from './ValuePerTime';

/**
 * 
 * @export
 * @interface GetWeatherGraph
 */
export interface GetWeatherGraph {
    /**
     * 
     * @type {number}
     * @memberof GetWeatherGraph
     */
    max?: number;
    /**
     * 
     * @type {number}
     * @memberof GetWeatherGraph
     */
    min?: number;
    /**
     * 
     * @type {string}
     * @memberof GetWeatherGraph
     */
    weatherMetric?: GetWeatherGraphWeatherMetricEnum;
    /**
     * 
     * @type {Array<ValuePerTime>}
     * @memberof GetWeatherGraph
     */
    valuePerTime?: Array<ValuePerTime>;
}


/**
 * @export
 */
export const GetWeatherGraphWeatherMetricEnum = {
    Percipitation: 'PERCIPITATION',
    Temperature: 'TEMPERATURE',
    Humidity: 'HUMIDITY',
    WindSpeed: 'WIND_SPEED'
} as const;
export type GetWeatherGraphWeatherMetricEnum = typeof GetWeatherGraphWeatherMetricEnum[keyof typeof GetWeatherGraphWeatherMetricEnum];


/**
 * Check if a given object implements the GetWeatherGraph interface.
 */
export function instanceOfGetWeatherGraph(value: object): value is GetWeatherGraph {
    return true;
}

export function GetWeatherGraphFromJSON(json: any): GetWeatherGraph {
    return GetWeatherGraphFromJSONTyped(json, false);
}

export function GetWeatherGraphFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetWeatherGraph {
    if (json == null) {
        return json;
    }
    return {
        
        'max': json['max'] == null ? undefined : json['max'],
        'min': json['min'] == null ? undefined : json['min'],
        'weatherMetric': json['weatherMetric'] == null ? undefined : json['weatherMetric'],
        'valuePerTime': json['valuePerTime'] == null ? undefined : ((json['valuePerTime'] as Array<any>).map(ValuePerTimeFromJSON)),
    };
}

export function GetWeatherGraphToJSON(json: any): GetWeatherGraph {
    return GetWeatherGraphToJSONTyped(json, false);
}

export function GetWeatherGraphToJSONTyped(value?: GetWeatherGraph | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'max': value['max'],
        'min': value['min'],
        'weatherMetric': value['weatherMetric'],
        'valuePerTime': value['valuePerTime'] == null ? undefined : ((value['valuePerTime'] as Array<any>).map(ValuePerTimeToJSON)),
    };
}

