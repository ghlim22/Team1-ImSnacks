/**
 * Nyeoreumnagi Swagger
 * 녀름나기 REST API 문서
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


export class GetSevenDaysForecastResponse {
    'dayOfWeek'?: string;
    'weatherCondition'?: GetSevenDaysForecastResponseWeatherConditionEnum;
    'maxTemperature'?: number;
    'minTemperature'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "dayOfWeek",
            "baseName": "dayOfWeek",
            "type": "string",
            "format": ""
        },
        {
            "name": "weatherCondition",
            "baseName": "weatherCondition",
            "type": "GetSevenDaysForecastResponseWeatherConditionEnum",
            "format": ""
        },
        {
            "name": "maxTemperature",
            "baseName": "maxTemperature",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "minTemperature",
            "baseName": "minTemperature",
            "type": "number",
            "format": "int32"
        }    ];

    static getAttributeTypeMap() {
        return GetSevenDaysForecastResponse.attributeTypeMap;
    }

    public constructor() {
    }
}

export const GetSevenDaysForecastResponseWeatherConditionEnum = {
  Sunny: 'SUNNY',
  LessCloudy: 'LESS_CLOUDY',
  Cloudy: 'CLOUDY',
  StrongWind: 'STRONG_WIND',
  Thunder: 'THUNDER',
  Rain: 'RAIN',
  HeavyRain: 'HEAVY_RAIN',
  Snow: 'SNOW',
  Night: 'NIGHT',
  CloudyNight: 'CLOUDY_NIGHT',
  HeatWave: 'HEAT_WAVE'
} as const;
export type GetSevenDaysForecastResponseWeatherConditionEnum = typeof GetSevenDaysForecastResponseWeatherConditionEnum[keyof typeof GetSevenDaysForecastResponseWeatherConditionEnum];

